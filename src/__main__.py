import os
import telebot
import random
import logging
from telebot import types, logger
from config.configToken import TOKEN
from module.other.checkFromat import check
from module.other.map_pool import random_from_val
from module.other.roulette_casino import game_rulette_casino
from module.funcBD.func_on_db import updataBalance, createdDB, add_user_db, get_user_db

bot = telebot.TeleBot(TOKEN)
casino_mode = None
stavka = None
balance = 0

createdDB()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
@bot.message_handler(commands=['start'])
def main(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–ü–æ–∏–≥—Ä–∞—Ç—å —Å–æ –º–Ω–æ–π', callback_data='game')
    markup.row(btn1)
    markup.add(types.InlineKeyboardButton('–ü–æ–±–æ–ª—Ç–∞—Ç—å —Å–æ –º–Ω–æ–π', callback_data='chating'))
    markup.add(types.InlineKeyboardButton('–ù–∞—à –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä))', url='https://discord.com/invite/tTQJMrXyPw'))
    bot.send_message(message.chat.id, '–ö—É, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —á—Ç–æ —è –º–æ–≥—É? –ü–æ—Ç—ã–∫–∞–π –∫–Ω–æ–ø–∫–∏ –∏ —É–∑–Ω–∞–µ—à—å)', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'game':
        bot.send_message(callback.message.chat.id, '–ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä, –∞ –∏–º–µ–Ω–Ω–æ:\n1. –†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä –î–ª—è –í–∞–ª–æ—Ä–∞–Ω—Ç–∞ (/random_val)\n2. –ö–∞–∑–∏–Ω–æ: –†—É–ª–µ—Ç–∫–∞ (/roulette)')
    elif callback.data == 'chating':
        bot.send_message(callback.message.chat.id, '–ù—É –ª–∞–Ω, –¥–∞–≤–∞–π –ø–æ–ø–∏–∑–¥–∏–º, —á—Ç–æ –∫–∞–∫ —Ç—ã?')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ /random_val
@bot.message_handler(commands=['random_val'])
def random_val(message):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.row(types.KeyboardButton('–ö–∞—Ä—Ç—ã'))
    markup.add(types.KeyboardButton('–ê–≥–µ–Ω—Ç—ã'))
    markup.add(types.KeyboardButton('–û—Ä—É–∂–∏—è'))
    bot.send_message(message.chat.id, '–ï—Å—Ç—å 3 —Ä–µ–∂–∏–º–∞:\n1. –†–∞–Ω–¥–æ–º –ø–æ –∫–∞—Ä—Ç–∞–º\n2. –†–∞–Ω–¥–æ–º –ø–æ –∞–≥–µ–Ω—Ç–∞–º\n3. –†–∞–Ω–¥–æ–º –ø–æ –æ—Ä—É–∂–∏—è–º', reply_markup=markup)
    bot.register_next_step_handler(message, on_click)

def on_click(message):
    if message.text == '–ö–∞—Ä—Ç—ã' or message.text.strip() == '1' or message.text.strip() == '1.' or message.text.strip() == '1)':
        result = random_from_val(message.text)
        bot.send_message(message.chat.id, f'–ò–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–∞—Ä—Ç, –≤–∞–º –≤—ã–ø–∞–ª: <i><b>{result}</b></i>', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')
        file = open(f'data/photo/maps/{result}.png', 'rb')
        bot.send_photo(message.chat.id, file)
    elif message.text == '–ê–≥–µ–Ω—Ç—ã' or message.text.strip() == '2' or message.text.strip() == '2.' or message.text.strip() == '2)':
        result = random_from_val(message.text)
        count_files = os.listdir(f'data/photo/agents/{result}')
        bot.send_message(message.chat.id, f'–ò–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤, –≤–∞–º –≤—ã–ø–∞–ª(a): <i><b>{result}</b></i>', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')
        file = open(f'data/photo/agents/{result}/{result}_{str(random.randint(1, len(count_files)))}.png', 'rb')
        bot.send_photo(message.chat.id, file)
    elif message.text == '–û—Ä—É–∂–∏—è' or message.text.strip() == '3' or message.text.strip() == '3.' or message.text.strip() == '3)':
        result = random_from_val(message.text)
        bot.send_message(message.chat.id, f'–ò–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –æ—Ä–∂–∏–π, –≤–∞–º –≤—ã–ø–∞–ª: <i><b>{result}</b></i>', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ /roulette
@bot.message_handler(commands=['roulette'])
def roulette_cas(message):    
    add_user_db(message.from_user.id, message.from_user.username)
    
    if message.text == '/roulette' or message.text == '–î–∞, –¥–∞–≤–∞–π' or message.text.lower() == '–¥–∞' or message.text.lower() == '+' or message.text.lower() == 'yes':
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        markup.row(types.KeyboardButton('üëî –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'))
        markup.row(types.KeyboardButton('–ö—Ä–∞—Å–Ω–æ–µ –∏–ª–∏ –ß–µ—Ä–Ω–æ–µ'), types.KeyboardButton('–ù–µ—á–µ—Ç–Ω–æ–µ –∏–ª–∏ —á–µ—Ç–Ω–æ–µ'))
        markup.row(types.KeyboardButton('–°—Ç–∞–≤–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ'))
        markup.row(types.KeyboardButton('–°—Ç–∞–≤–∫–∞ ¬´–ú–∞–ª—ã–µ –∏ –±–æ–ª—å—à–∏–µ –Ω–æ–º–µ—Ä–∞¬ª'), types.KeyboardButton('–î—é–∂–∏–Ω—ã'))
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –ó–Ω–∞—á–∏—Ç —Ö–æ—Ç–∏–º –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—ÉüçÄ?)\n–ù–∞–ø–æ–º–∏–Ω–∞—é –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã, –≤—ã –≤—ã–±–µ—Ä–∞–µ—Ç–µ, –∫–∞–∫ –≤—ã –±—É–¥–µ—Ç–µ —Å—Ç–∞–≤–∏—Ç—å, —Å—Ç–∞–≤–∏—Ç–µ –∏ –Ω–∞–¥–µ–µ—Ç–µ—Å—å –Ω–∞ —É–¥–∞—á—É!\nBce–≥–æ 5 –≤–∏–¥–æ–≤:\n1. –ù–∞ –∫—Ä–∞—Å–Ω–æ–µ –∏–ª–∏ —á–µ—Ä–Ω–æ–µ\n2. –ù–µ—á–µ—Ç–Ω–æ–µ –∏–ª–∏ —á–µ—Ç–Ω–æ–µ\n3. –°—Ç–∞–≤–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ\n4. –°—Ç–∞–≤–∫–∞ ¬´–ú–∞–ª—ã–µ –∏ –±–æ–ª—å—à–∏–µ –Ω–æ–º–µ—Ä–∞¬ª\n5. –î—é–∂–∏–Ω—ã', reply_markup=markup)
        bot.register_next_step_handler(message, next_roulette)
    else:
        bot.send_message(message.chat.id, '–ù—É –∏ –Ω–µ –Ω–∞–¥–æ', reply_markup=types.ReplyKeyboardRemove())

def next_roulette(message):
    if message.text == "üëî –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
        profile(message)
    elif message.text == '–ö—Ä–∞—Å–Ω–æ–µ –∏–ª–∏ –ß–µ—Ä–Ω–æ–µ' or message.text.strip() == '1' or message.text.strip() == '1.' or message.text.strip() == '1)':
        bot.send_message(message.chat.id, '–•–æ—á—É –Ω–∞–ø–æ–º–Ω–∏—Ç—å, –≤ —ç—Ç–æ–º —Ç–∏–ø–µ —Å—Ç–∞–≤–∫–∏ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å:\nüî¥–ö—Ä–∞—Å–Ω–æ–µüî¥ –∏–ª–∏ ‚ö´–ß–µ—Ä–Ω–æ–µ‚ö´', reply_markup=types.ReplyKeyboardRemove())
        markup1 = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        markup1.row(types.KeyboardButton('üî¥–ö—Ä–∞—Å–Ω–æ–µüî¥'), types.KeyboardButton('‚ö´–ß–µ—Ä–Ω–æ–µ‚ö´'))
        bot.send_message(message.chat.id, '–ù—É —Ç–∞–∫ —á—Ç–æ, –Ω–∞ —á—Ç–æ —Å—Ç–∞–≤–∏–º?', reply_markup=markup1)
        bot.register_next_step_handler(message, next_roulette_rate)
    elif message.text == '–ù–µ—á–µ—Ç–Ω–æ–µ –∏–ª–∏ —á–µ—Ç–Ω–æ–µ' or message.text.strip() == '2' or message.text.strip() == '2.' or message.text.strip() == '2)':
        bot.send_message(message.chat.id, '–•–æ—á—É –Ω–∞–ø–æ–º–Ω–∏—Ç—å, –≤ —ç—Ç–æ–º —Ç–∏–ø–µ —Å—Ç–∞–≤–∫–∏ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å:\n–ß–µ—Ç–Ω–æ–µ –∏–ª–∏ –ù–µ—á–µ—Ç–Ω–æ–µ', reply_markup=types.ReplyKeyboardRemove())
        markup1 = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        markup1.row(types.KeyboardButton('–ß–µ—Ç–Ω–æ–µ'), types.KeyboardButton('–ù–µ—á–µ—Ç–Ω–æ–µ'))
        bot.send_message(message.chat.id, '–ù—É —Ç–∞–∫ —á—Ç–æ, –Ω–∞ —á—Ç–æ —Å—Ç–∞–≤–∏–º?', reply_markup=markup1)
        bot.register_next_step_handler(message, next_roulette_rate)
    elif message.text == '–°—Ç–∞–≤–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ' or message.text.strip() == '3' or message.text.strip() == '3.' or message.text.strip() == '3)':
        bot.send_message(message.chat.id, '–•–æ—á—É –Ω–∞–ø–æ–º–Ω–∏—Ç—å, –≤ —ç—Ç–æ–º —Ç–∏–ø–µ —Å—Ç–∞–≤–∫–∏ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 36\n–î–ª—è —Å—Ç–∞–≤–∫–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ –≤ —á–∞—Ç', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, next_roulette_rate)
    elif message.text == '–°—Ç–∞–≤–∫–∞ ¬´–ú–∞–ª—ã–µ –∏ –±–æ–ª—å—à–∏–µ –Ω–æ–º–µ—Ä–∞¬ª' or message.text.strip() == '4' or message.text.strip() == '4.' or message.text.strip() == '4)':
        bot.send_message(message.chat.id, '–•–æ—á—É –Ω–∞–ø–æ–º–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞, –≤ —ç—Ç–æ–º —Ç–∏–ø–µ —Å—Ç–∞–≤–∫–∏ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å:\n1. –ú–∞–ª—ã–µ —á–∏—Å–ª–∞ (–æ—Ç 1 –¥–æ 18)\n2. –ë–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞ (–æ—Ç 19 –¥–æ 36)', reply_markup=types.ReplyKeyboardRemove())
        markup1 = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        markup1.row(types.KeyboardButton('–ú–∞–ª—ã–µ —á–∏—Å–ª–∞'), types.KeyboardButton('–ë–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞'))
        bot.send_message(message.chat.id, '–ù—É —Ç–∞–∫ —á—Ç–æ, –Ω–∞ —á—Ç–æ —Å—Ç–∞–≤–∏–º?', reply_markup=markup1)
        bot.register_next_step_handler(message, next_roulette_rate)
    elif message.text == '–î—é–∂–∏–Ω—ã' or message.text.strip() == '5' or message.text.strip() == '5.' or message.text.strip() == '5)':
        bot.send_message(message.chat.id, '–•–æ—á—É –Ω–∞–ø–æ–º–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞, –≤ —ç—Ç–æ–º —Ç–∏–ø–µ —Å—Ç–∞–≤–∫–∏ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ 3 –¥—é–∂–∏–Ω:\n1. –ü–µ—Ä–≤–∞—è –¥—é–∂–∏–Ω–∞ ‚Äî —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 12\n2. –í—Ç–æ—Ä–∞—è –¥—é–∂–∏–Ω–∞ ‚Äî —á–∏—Å–ª–∞ –æ—Ç 13 –¥–æ 24\n3. –¢—Ä–µ—Ç—å—è –¥—é–∂–∏–Ω–∞ ‚Äî —á–∏—Å–ª–∞ –æ—Ç 25 –¥–æ 36', reply_markup=types.ReplyKeyboardRemove())
        markup1 = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        markup1.row(types.KeyboardButton('–ü–µ—Ä–≤–∞—è –¥—é–∂–∏–Ω–∞'))
        markup1.row(types.KeyboardButton('–í—Ç–æ—Ä–∞—è –¥—é–∂–∏–Ω–∞'))
        markup1.row(types.KeyboardButton('–¢—Ä–µ—Ç—å—è –¥—é–∂–∏–Ω–∞'))
        bot.send_message(message.chat.id, '–ù—É —Ç–∞–∫ —á—Ç–æ, –Ω–∞ —á—Ç–æ —Å—Ç–∞–≤–∏–º?', reply_markup=markup1)
        bot.register_next_step_handler(message, next_roulette_rate)

# –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞
def profile(message):
    user = get_user_db(message.from_user.id)
    bot.send_message(message.chat.id, f"–ò–≥—Ä–æ–∫: {user[0][3]}\n–ë–∞–ª–∞–Ω—Å: {user[0][2]}üí∞")
    bot.send_message(message.chat.id, "–ù–µ –∑–∞—É–±–¥—å—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Ä–µ–∂–∏–º–æ–≤ –∏–≥—Ä—ã:\n1. –ù–∞ –∫—Ä–∞—Å–Ω–æ–µ –∏–ª–∏ —á–µ—Ä–Ω–æ–µ\n2. –ù–µ—á–µ—Ç–Ω–æ–µ –∏–ª–∏ —á–µ—Ç–Ω–æ–µ\n3. –°—Ç–∞–≤–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ\n4. –°—Ç–∞–≤–∫–∞ ¬´–ú–∞–ª—ã–µ –∏ –±–æ–ª—å—à–∏–µ –Ω–æ–º–µ—Ä–∞¬ª\n5. –î—é–∂–∏–Ω—ã")
    bot.register_next_step_handler(message, next_roulette)

def next_roulette_rate(message):
    global casino_mode
    global balance
    casino_mode = message.text # –°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –Ω–∞ —á—Ç–æ —Å—Ç–∞–≤–∏–º (–∫—Ä–∞—Å–Ω–æ–µ, —á–µ—Ä–Ω–æ–µ, —á–∏—Å–ª–æ, –ø–µ—Ä–≤–∞—è –¥—é–∂–∏–Ω–∞ –∏ —Ç.–¥.)
    user = get_user_db(message.from_user.id)
    balance = user[0][2]
    bot.send_message(message.chat.id, f"–ö–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å (–Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç)?\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance}üí∞")
    
    if casino_mode == "üî¥–ö—Ä–∞—Å–Ω–æ–µüî¥" or casino_mode.lower() == "–∫—Ä–∞—Å–Ω–æ–µ" or casino_mode.lower() == "–∫" or casino_mode == '‚ö´–ß–µ—Ä–Ω–æ–µ‚ö´' or casino_mode.lower() == "—á–µ—Ä–Ω–æ–µ" or casino_mode.lower() == "—á—ë—Ä–Ω–æ–µ" or casino_mode.lower() == "—á":
        bot.register_next_step_handler(message, next_roulette_rb)
    elif casino_mode == '–ß–µ—Ç–Ω–æ–µ' or casino_mode == '–ù–µ—á–µ—Ç–Ω–æ–µ':
        bot.register_next_step_handler(message, next_roulette_dch)
    elif casino_mode == '–ú–∞–ª—ã–µ —á–∏—Å–ª–∞' or casino_mode == '–ë–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞':
        bot.register_next_step_handler(message, next_roulette_mb)
    elif casino_mode == '–ü–µ—Ä–≤–∞—è –¥—é–∂–∏–Ω–∞' or casino_mode == '–í—Ç–æ—Ä–∞—è –¥—é–∂–∏–Ω–∞' or casino_mode == '–¢—Ä–µ—Ç—å—è –¥—é–∂–∏–Ω–∞':
        bot.register_next_step_handler(message, next_roulette_du)
    elif casino_mode in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36']:
        bot.register_next_step_handler(message, next_roulette_number)

# –†—É–ª–µ—Ç–∫–∞: –ö—Ä–∞—Å–Ω–æ–µ-–ß–µ—Ä–Ω–æ–µ
def next_roulette_rb(message):
    global casino_mode
    global stavka
    global balance
    try:
        stavka = int(message.text)
        if check(stavka, balance) == False:
            bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')
        else:
            balance -= stavka
            result = game_rulette_casino()
            bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–æ:\n{result[1]} <b>{result[0]}</b> {result[1]}', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')
            if casino_mode == "üî¥–ö—Ä–∞—Å–Ω–æ–µüî¥" or casino_mode.lower() == "–∫—Ä–∞—Å–Ω–æ–µ" or casino_mode.lower() == "–∫":
                if result[1] == 'üî¥':
                    balance += stavka * 2
                    bot.send_message(message.chat.id, f'–ü–æ–≤–µ–∑–ª–æ, –ø–æ—Ä—à–∏–≤–µ—Ü!\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                elif result[1] == '‚ö´' or result[1] == 'üü¢':
                    bot.send_message(message.chat.id, f'–ö–∞–∫–∞—è –¥–æ—Å–∞–¥–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            elif casino_mode == '‚ö´–ß–µ—Ä–Ω–æ–µ‚ö´' or casino_mode.lower() == "—á–µ—Ä–Ω–æ–µ" or casino_mode.lower() == "—á—ë—Ä–Ω–æ–µ" or casino_mode.lower() == "—á":
                if result[1] == 'üî¥':
                    bot.send_message(message.chat.id, f'–ö–∞–∫–∞—è –¥–æ—Å–∞–¥–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                elif result[1] == '‚ö´' or result[1] == 'üü¢':
                    balance += stavka * 2
                    bot.send_message(message.chat.id, f'–ü–æ–≤–µ–∑–ª–æ, –ø–æ—Ä—à–∏–≤–µ—Ü!\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
        
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            updataBalance(balance, message.from_user.id)
        
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row(types.KeyboardButton('–î–∞, –¥–∞–≤–∞–π'), types.KeyboardButton('–Ø –ø–∞—Å'))
            bot.send_message(message.chat.id, '–ï—â—ë –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å?', reply_markup=markup)
            bot.register_next_step_handler(message, roulette_cas)
    except:
        bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')

# –†—É–ª–µ—Ç–∫–∞: –ß–µ—Ç–Ω—ã–µ-–ù–µ—á–µ—Ç–Ω—ã–µ
def next_roulette_dch(message):
    global casino_mode
    global stavka
    global balance
    try:
        stavka = int(message.text)
        if check(stavka, balance) == False:
            bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')
        else:
            balance -= stavka
            result = game_rulette_casino()
            bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–æ:\n{result[1]} <b>{result[0]}</b> {result[1]}', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')
            if casino_mode == '–ß–µ—Ç–Ω–æ–µ':
                if result[0] % 2 == 0:
                    balance += stavka * 2
                    bot.send_message(message.chat.id, f'–ü–æ–≤–µ–∑–ª–æ, –ø–æ—Ä—à–∏–≤–µ—Ü!\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                elif result[0] % 2 != 0 or result[0] == 0:
                    bot.send_message(message.chat.id, f'–ö–∞–∫–∞—è –¥–æ—Å–∞–¥–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            elif casino_mode == '–ù–µ—á–µ—Ç–Ω–æ–µ':
                if result[0] % 2 == 0 or result[0] == 0:
                    bot.send_message(message.chat.id, f'–ö–∞–∫–∞—è –¥–æ—Å–∞–¥–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                elif result[0] % 2 != 0:
                    balance += stavka * 2
                    bot.send_message(message.chat.id, f'–ü–æ–≤–µ–∑–ª–æ, –ø–æ—Ä—à–∏–≤–µ—Ü!\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
        
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            updataBalance(balance, message.from_user.id)
        
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row(types.KeyboardButton('–î–∞, –¥–∞–≤–∞–π'), types.KeyboardButton('–Ø –ø–∞—Å'))
            bot.send_message(message.chat.id, '–ï—â—ë –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å?', reply_markup=markup)
            bot.register_next_step_handler(message, roulette_cas)
    except:
        bot.send_message(message.chat.id, '–°—Ç–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')

# –†—É–ª–µ–∫—Ç–∞: –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ
def next_roulette_number(message):
    global casino_mode
    global stavka
    global balance
    try:
        stavka = int(message.text)
        if check(stavka, balance) == False:
            bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')
        else:
            balance -= stavka
            result = game_rulette_casino()
            bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–æ:\n{result[1]} <b>{result[0]}</b> {result[1]}',  parse_mode='html', reply_markup=types.ReplyKeyboardRemove())
            if result[0] == int(casino_mode):
                balance += (stavka * 35) + stavka
                bot.send_message(message.chat.id, f'–ö—Ä–∞—Å–∞–≤–∞, –Ω—É —Ç—É—Ç —è –ø—Ä–æ—Å—Ç–æ üëèüëèüëè\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka * 35}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            else:
                bot.send_message(message.chat.id, f'–ê–Ω–ª–∞–∫, —Ç—É—Ç –≤—ã–π–≥—Ä–∞—Ç—å - —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –≤–µ–∑–µ–Ω–∏–µ\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            updataBalance(balance, message.from_user.id)
            
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row(types.KeyboardButton('–î–∞, –¥–∞–≤–∞–π'), types.KeyboardButton('–Ø –ø–∞—Å'))
            bot.send_message(message.chat.id, '–ï—â—ë –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å?', reply_markup=markup)
            bot.register_next_step_handler(message, roulette_cas)
    except:
        bot.send_message(message.chat.id, '–°—Ç–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')

# –†—É–ª–µ—Ç–∫–∞: –ú–∞–ª—ã–µ –∏ –ë–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞
def next_roulette_mb(message):
    global casino_mode
    global stavka
    global balance
    try:
        stavka = int(message.text)
        if check(stavka, balance) == False:
            bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')
        else:
            balance -= stavka
            result = game_rulette_casino()
            bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–æ:\n{result[1]} <b>{result[0]}</b> {result[1]}', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')
            if casino_mode == '–ú–∞–ª—ã–µ —á–∏—Å–ª–∞':
                if result[0] < 19:
                    balance += stavka * 2
                    bot.send_message(message.chat.id, f'–ü–æ–≤–µ–∑–ª–æ, –ø–æ—Ä—à–∏–≤–µ—Ü!\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                elif result[0] >= 19:
                    bot.send_message(message.chat.id, f'–ö–∞–∫–∞—è –¥–æ—Å–∞–¥–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            elif casino_mode == '–ë–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞':
                if result[0] >= 19:
                    balance += stavka * 2
                    bot.send_message(message.chat.id, f'–ü–æ–≤–µ–∑–ª–æ, –ø–æ—Ä—à–∏–≤–µ—Ü!\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                elif result[0] < 19:
                    bot.send_message(message.chat.id, f'–ö–∞–∫–∞—è –¥–æ—Å–∞–¥–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            updataBalance(balance, message.from_user.id)
            
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row(types.KeyboardButton('–î–∞, –¥–∞–≤–∞–π'), types.KeyboardButton('–Ø –ø–∞—Å'))
            bot.send_message(message.chat.id, '–ï—â—ë –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å?', reply_markup=markup)
            bot.register_next_step_handler(message, roulette_cas)
    
    except:
        bot.send_message(message.chat.id, '–°—Ç–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')

# –†—É–ª–µ—Ç–∫–∞: –î—é–∂–∏–Ω—ã
def next_roulette_du(message):
    global casino_mode
    global stavka
    global balance
    try:
        stavka = int(message.text)
        if check(stavka, balance) == False:
            bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')
        else:
            balance -= stavka
            result = game_rulette_casino()
            bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–æ:\n{result[1]} <b>{result[0]}</b> {result[1]}', reply_markup=types.ReplyKeyboardRemove(), parse_mode='html')
            if casino_mode == '–ü–µ—Ä–≤–∞—è –¥—é–∂–∏–Ω–∞':
                if result[0] >= 1 and result[0] <= 12:
                    balance += (stavka * 2) + stavka
                    bot.send_message(message.chat.id, f'–ï–±–∞, –∫—Ä–∞—Å–∞–≤–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka * 2}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                else:
                    bot.send_message(message.chat.id, f'–ê–Ω–ª–∞–∫\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            elif casino_mode == '–í—Ç–æ—Ä–∞—è –¥—é–∂–∏–Ω–∞':
                if result[0] >= 13 and result[0] <= 24:
                    balance += (stavka * 2) + stavka
                    bot.send_message(message.chat.id, f'–ï–±–∞, –∫—Ä–∞—Å–∞–≤–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka * 2}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
                else:
                    bot.send_message(message.chat.id, f'–ê–Ω–ª–∞–∫\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}üí∞')
            elif casino_mode == '–¢—Ä–µ—Ç—å—è –¥—é–∂–∏–Ω–∞':
                if result[0] >= 25 and result[0] <= 36:
                    balance += (stavka * 2) + stavka
                    bot.send_message(message.chat.id, f'–ï–±–∞, –∫—Ä–∞—Å–∞–≤–∞)\n–î–µ–π—Å—Ç–≤–∏–µ: +{stavka * 2}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}')
                else:
                    bot.send_message(message.chat.id, f'–ê–Ω–ª–∞–∫\n–î–µ–π—Å—Ç–≤–∏–µ: -{stavka}üíµ\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance}')
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö balance –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            updataBalance(balance, message.from_user.id)
            
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row(types.KeyboardButton('–î–∞, –¥–∞–≤–∞–π'), types.KeyboardButton('–Ø –ø–∞—Å'))
            bot.send_message(message.chat.id, '–ï—â—ë –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å?', reply_markup=markup)
            bot.register_next_step_handler(message, roulette_cas)
    except:
        bot.send_message(message.chat.id, '–°—Ç–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ —Ç–∏–ø–∞ photo
@bot.message_handler(content_types=['photo'])
def get_photo(message):
    bot.reply_to(message, '–ò –∑–∞—á–µ–º —Ç—ã –º–Ω–µ —ç—Ç–æ —Å–∫–∏–Ω—É–ª?')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ /help
@bot.message_handler(commands=['help'])
def help(message):
	bot.send_message(message.chat.id, '–ó–∞—á–µ–º —Ç–µ–±–µ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞? –¢—ã —á—Ç–æ —Ç—É–ø–æ–π? –ò—Ç–∞–∫ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ /info
@bot.message_handler(commands=['info'])
def info(message):
	bot.send_message(message.chat.id, message)
 

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler()
def messega_person(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç' or message.text.lower() == '–¥–∞—Ä–æ–≤–∞' or message.text.lower() == '–∫—É' or message.text.lower() == '—Å–∞–ª–∞–º':
        bot.send_message(message.chat.id, '–•–µ–ª–æ—É')
    elif message.text.lower() == 'id':
        bot.reply_to(message, f'ID: {message.from_user.id}')
    elif message.text.lower() == '–ø–æ–∫–∞' or message.text.lower() == '–±–±' or message.text.lower() == '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è':
        bot.reply_to(message, f'–ü—Ä–æ—â–∞–π—Ç–µ, {message.from_user.username}')


if __name__ == "__main__":
    logger.setLevel(logging.DEBUG)
    bot.polling(non_stop=True, skip_pending=True)